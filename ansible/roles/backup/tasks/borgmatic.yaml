---

# A missing sys/acl.h solved by this; https://man7.org/tlpi/code/faq.html#sys-acl.h-missing
- name: Install borg requirements
  apt:
    pkg: 
    - pip
    - pkg-config
    - libacl1-dev
    - libssl-dev
    - liblz4-dev
    - libzstd-dev
    - libxxhash-dev

- name: Install Borgmatic
  become: true
  pip:
    name: "{{ item }}"
  loop:
    - setuptools
    - pkgconfig
    - borgmatic
    - borgbackup

# TODO: At some point, the /usr/local/bin/borg application was not part of the PATH,
# and as such was not found. `which borg` still replied with the above, correct path,
# but it was no longer runnable that way. Simplest fix was to just symlink it:
# ln -s /usr/local/bin/borg /usr/bin/borg

# TODO: Specify manual steps for remote repo init
# Ensure ssh pub key, e.g. via 1pass, bw. Either manually, or
# op item get "SSH Key" --fields "public key" > ~/.ssh/id_ed25519.pub
# ssh-copy-id -f -p23 -i ~/.ssh/id_ed25519.pub -s u368673@u368673.your-storagebox.de
# borgmatic init --encryption repokey --config files/cloud-borg-backup.yaml
# Enter a passphrase for the repokey encryption, manually
# borg key export ssh://u368673@u368673.your-storagebox.de:23/./cloud-backup.borg
# THe passphrase alone does not suffice, but the key must also be saved

- name: Ensure systemd user dir exists
  file:
    path: "{{ ansible_env.HOME }}/.config/systemd/user"
    state: directory
    mode: 0744

# TODO: Loop over all borg configs to backup without manually specifying them
# TODO: Ensure that backup service is run as unprivileged user
#       Note: for some reason, just adding `become` here did not work, as when looking up user directory
#       we still ended up in `/root`. For now we leave it to log in as default user, i.e. root
- name: Setup systemd service and timer for given configuration
  loop:
    - cloud-borg-backup
  loop_control:
    loop_var: borgmatic_config_filename
  include_tasks: systemd-services.yaml
